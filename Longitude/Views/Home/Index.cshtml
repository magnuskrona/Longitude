
<div id="count" style="padding:10px 15px 10px 15px;text-align: center; border:1px solid darkblue; z-index:1000; font-size:2em; font-family: arial;
color:darkblue;position:absolute; top:10px; right:10px;background: white;opacity:0.6;"></div>;
<div id="mapContainer"></div>

@section scripts{
    
    <script src="~/signalr/hubs"></script>
    <script charset="UTF-8" type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>

    <script type="text/javascript">
        $(function() {

            var mapHub = $.connection.mapHub;

            mapHub.client.send = function(client) {
                setPosition(client);
                setCount();
            };

            mapHub.client.init = function(clients) {
                if (clients != 'undefined') {
                    for (var i = 0; i < clients.length; i++) {
                        setPosition(clients[i]);
                    }
                    
                }
                setCount();
            };

            mapHub.client.remove = function(clientId) {
                removePin(clientId);
                setCount();
                setView();
            };

            var apiKey = 'Ap_Zt5LDStQ384OLgQu9T5BdhRDNvjjrH01UZAucm_yHo9IYinzEOVVDIyGkfQIt';
            var map, infoBox, latitude, longitude, dataLayer, infoBoxLayer;

            function createMap() {
                map = new Microsoft.Maps.Map(document.getElementById('mapContainer'), { credentials: apiKey, showDashboard: true, showScalebar: true });

                dataLayer = new Microsoft.Maps.EntityCollection();
                map.entities.push(dataLayer);

                infoBoxLayer = new Microsoft.Maps.EntityCollection();
                map.entities.push(infoBoxLayer);

                infoBox = new Microsoft.Maps.Infobox(new Microsoft.Maps.Location(0, 0), { visible: false, offset: new Microsoft.Maps.Point(0, 20) });
                infoBoxLayer.push(infoBox);
            }

            function geoPositionError(error) {
                console.log("ERROR!" + error.message);
            }

            var geoPositionOptions = {
                enableHighAccuracy: false,
                timeout: 5000,
                maximumAge: 6000000
            };

            function getPosition() {

                if (navigator.geolocation) {

                    navigator.geolocation.getCurrentPosition(function(position) {

                        latitude = position.coords.latitude;
                        longitude = position.coords.longitude;

                        mapHub.server.broadcastPosition(latitude, longitude);

                    }, geoPositionError, geoPositionOptions);
                }
            }
            
            function setCount() {
                $("#count").html(dataLayer.getLength() + ' user(s) in the event');
            }

            function getBestView() {
                var locations = [];

                for (var i = 0; i < dataLayer.getLength(); i++) {

                    var l = new Microsoft.Maps.Location(dataLayer.get(i).getLocation().latitude, dataLayer.get(i).getLocation().longitude);
                    locations.push(l);

                }

                if (locations.length > 1) {
                    var bounds = Microsoft.Maps.LocationRect.fromLocations(locations);
                    return { bounds: bounds };
                } else {

                    return { zoom: 10, center: locations[0] };
                }

            }

            function showInfoBox(e) {
                if (e.targetType == 'pushpin') {
                    infoBox.setLocation(e.target.getLocation());
                    infoBox.setOptions({ visible: true, title: e.target.Title, description: e.target.Description });
                }
            }
            
            function removePin(id) {
                var existing;
                for (var i = 0; i < dataLayer.getLength() ; i++) {
                    if (dataLayer.get(i).Id == id) {
                        existing = dataLayer.get(i);
                        break;
                    }
                }

                if (existing)
                    dataLayer.remove(existing);
            }
            
            function setView() {
                map.setView(getBestView());
            }

            function setPosition(client) {
                var location = new Microsoft.Maps.Location(client.Latitude, client.Longitude);

                removePin(client.Id);

                var pin = new Microsoft.Maps.Pushpin(location, { title: client.Name });
                pin.Id = client.Id;
                pin.Title = client.Name;
                pin.Description = client.Description;

                Microsoft.Maps.Events.addHandler(pin, 'click', showInfoBox);

                dataLayer.push(pin);

                setView();
            }

            createMap();

            $.connection.hub.start().then(function () {
                getPosition();
                setInterval(getPosition, 5000);
            });


        })
    </script>
}